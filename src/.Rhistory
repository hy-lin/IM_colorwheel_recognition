pIDs <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
sessions <- c(1, 2)
for (i in pIDs){
pIDs[i]
}
for (i in pIDs){
i
}
print(i)
for (i in pIDs){
print(i)
}
log(1)
log(2pi)
log(2*pi)
log(2*pi * 5)
log(2*pi) + log(5)
PC = c(.9, .73, .6)
N = c(4, 8, 12)
K = (PC * 2 - 1) * N
K
PC = c(1.0, 1.0, 0.95, 0.9, 0.65, 0.6)
N = c(1, 2, 3, 4, 8, 12)
K = (PC * 2 - 1) * N
plot(N, K, ylim = c(0, 5))
lines(N, K, ylim = c(0, 5))
shiny::runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
step(1, 5)
1:8
1:8:0.1
1:0.1:8
linspace(1, 8, 100)
seq(from = 1, to = 8, length = 100)
help(randn)
?? randn
x <- seq(0, 3, length = 30)
y <- rnorm(x, mean = 0.5, sd = 1)
y
y <- rnorm(x, mean = 0.5, sd = 0.3)
y
y <- dnorm(x, mean = 0.5, sd = 0.3)
y
y <- pnorm(x, mean = 0.5, sd = 0.3)
y
y <- pexp(x,rate = 1)
y
plot(x, y)
y <- dexp(x,rate = 1)
plot(x, y)
y <- dnorm(x, mean = 0.5, sd = 0.3)
plot(x, y)
x <- seq(0, 1.5, length = 30)
y <- dchisq(x, 1)
x <- seq(0, 1.5, length = 30)
plot(x, y)
y <- dchisq(x, 2)
plot(x, y)
barplot(height = y)
barplot(height = y)
lines(x, y)
lines(x, y)
lines(x, y, col = 'blue')
barplot(height = y)
lines(x, y, col = 'blue')
lines(y, col = 'blue')
plot(x, y, type = 'l')
plot(x, y, type = 'l', col = 'b')
plot(x, y, type = 'l', col = 'blue')
x <- seq(0, 1.5, length = 30)
y <- dnorm(x, mean = 0.5, sd = 0.3)
plot(x, y, type = 'l', col = 'blue')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
x <- seq(0, 1.5, length = 30)
y <- dexp(x,rate = 1.2)
plot(x, y, type = 'l', col = 'blue')
plot(x, y, type = 'l', col = 'blue', ylim = c(0, 1.5))
y <- dchisq(x, 2)
plot(x, y, type = 'l', col = 'blue', ylim = c(0, 1.5))
y <- dnorm(x, mean = 0.5, sd = 0.3)
plot(x, y, type = 'l', col = 'blue', ylim = c(0, 1.5))
samples <- rexp(input$n_sample,rate = 1)
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
samples <- rexp(5,rate = 1)
sample
samples
lines(samples)
lines(samples, 1.0)
rep(1,0, 5)
lines(samples, rep(1.0, len(samples)))
lines(samples, rep(1.0, length(samples)))
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
samples <- rexp(5,rate = 1)
samples
samples <- rexp(5,rate = 1)
samples
samples <- rexp(5,rate = 1)
samples
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
RT[0] = 0
RT = []
RT = 0:0
RT
RT = array()
RT
RT = c(RT, 1)
RT
install.packages("ggplot2")
help std
sd
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
seq(1, 100, 5)
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
n_simulation = 100
n_rep = seq(1, 100, 5)
RT = rep(0, length(n_rep))
RT_sd = rep(0, length(n_rep))
get_sample <- function(dist_name, n_sample){
x <- seq(0.0, 3.0, length = 100)
if (dist_name == 'Normal'){
y <- dnorm(x+0.3, mean = 0.75, sd = 0.3)
samples <- rnorm(n_sample, mean = 0.75, sd = 0.3) +0.3
}
if (dist_name == 'Exponetial'){
y <- dexp(x+0.3,rate = 1)
samples <- rexp(n_sample,rate = 1) +0.3
}
if (dist_name == 'ChiSquare'){
y <- dchisq(x+0.3, 1)
samples <- rchisq(n_sample, 1) +0.3
}
samples[samples < 0.3] = 0.3
return(samples)
}
dist_name = 'Normal'
for (i in n_rep){
tmp_RT = rep(0, n_simulation)
for (l in 1:n_simulation){
samples <- get_sample(dist_name, i)
tmp_RT[l] = min(samples)
}
RT[i] = mean(tmp_RT)
RT_sd[i] = sd(tmp_RT)
}
n_simulation = 100
n_rep = seq(1, 100, 5)
RT = rep(0, length(n_rep))
RT_sd = rep(0, length(n_rep))
for (i in 1:length(n_rep)){
tmp_RT = rep(0, n_simulation)
for (l in 1:n_simulation){
samples <- get_sample(dist_name, n_rep[i])
tmp_RT[l] = min(samples)
}
RT[i] = mean(tmp_RT)
RT_sd[i] = sd(tmp_RT)
}
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
runApp('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/Memory2017/Session11/PowerLaw/PowerLaw/practice_effect.r')
setwd("~/GitHub/IM_colorwheel_recognition/src")
loadData <- function(exp){
data <- read.table(sprintf('Data/Experiment%d/recognition%d.dat', exp), header = FALSE, fill = FALSE)
}
loadData(2)
loadData <- function(exp){
data <- read.table(sprintf('Data/Experiment%d/recognition%d.dat', exp, exp), header = FALSE, fill = FALSE)
}
loadData(2)
loadData <- function(exp){
data <- read.table(sprintf('Data/Experiment%d/recognition%d.dat', exp, exp), header = FALSE, fill = FALSE)
return(data)
}
loadData(2)
loadData <- function(exp){
data <- read.table(sprintf('Data/Experiment%d/recognition%d.dat', exp, exp), header = FALSE, fill = FALSE)
names(data) <- c('ID', 'TrialIndex', 'Setsize', 'ProbeType',
'ColorTarget', 'LocationTarget',
'ColorNonTarget1', 'LocationNonTarget1',
'ColorNonTarget2', 'LocationNonTarget2',
'ColorNonTarget3', 'LocationNonTarget3',
'ColorNonTarget4', 'LocationNonTarget4',
'ColorNonTarget5', 'LocationNonTarget5',
'Response', 'Correctness', 'RT')
data$ID <- factor(data$ID)
data$TrialIndex <- factor(data$ID)
data$ProbeType <- factor(data$ProbeType)
data$Response <- factor(data$Response)
return(data)
}
data <- loadData(1)
View(data)
View(data)
exp2.data <- loadData(2)
summary(exp2.data)
tapply(data$PC, data$ProbeType, summary)
tapply(exp2.data$PC, exp2.data$ProbeType, summary)
tapply(exp2.data$Correctness, exp2.data$ProbeType, summary)
summary(exp2.data$Correctness)
View(exp2.data)
View(exp2.data)
loadData <- function(exp){
data <- read.table(sprintf('Data/Experiment%d/recognition%d.dat', exp, exp), header = FALSE, fill = FALSE)
names(data) <- c('ID', 'TrialIndex', 'Setsize', 'ProbeType',
'ColorTarget', 'LocationTarget',
'ColorNonTarget1', 'LocationNonTarget1',
'ColorNonTarget2', 'LocationNonTarget2',
'ColorNonTarget3', 'LocationNonTarget3',
'ColorNonTarget4', 'LocationNonTarget4',
'ColorNonTarget5', 'LocationNonTarget5',
'ColorProbe', 'LocationProbe',
'Response', 'Correctness', 'RT')
data$ID <- factor(data$ID)
data$TrialIndex <- factor(data$ID)
data$ProbeType <- factor(data$ProbeType)
data$Response <- factor(data$Response)
return(data)
}
exp2.data <- loadData(2)
tapply(exp2.data$Correctness, exp2.data$ProbeType, summary)
tapply(exp2.data$Setsize, exp2.data$ProbeType, summary)
tapply(exp2.data$Correctness, exp2.data$Setsize, summary)
exp2.data$RealProbeType
exp2.data$RealProbeType <- 1
length(exp2.data)
data2.data$sprintf('ColorNonTarget%d', 1)
exp2.data$sprintf('ColorNonTarget%d', 1)
nontargetvar <- paste('ColorNonTarget', 1)
exp2.data$nontargetvar
exp2.data[nontargetvar]
nontargetvar
nontargetvar <- paste('ColorNonTarget', 1, seq='')
nontargetvar
nontargetvar <- sprintf('ColorNontarget%d', 1)
nontargetvar
exp2.data[nontargetvar]
exp2.data['ColorNontarget1']
exp2.data['ColorNonTarget1']
exp2.data['ColorNonTarget1', 1]
exp2.data['ColorNonTarget1'][1]
exp2.data['ColorNonTarget1']
exp2.data[1, 'ColorNonTarget1']
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
exp2.data <- loadData(2)
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
View(exp2.data)
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
warnings()
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
nontargetvar <- sprintf('ColorNonTarget%d', 1)
i = 1
abs(data$ColorProbe[i] - data[i, nontargetvar]) < 30
abs(data$ColorProbe[i] - data[i, nontargetvar])
data$ColorProbe[i] - data[i, nontargetvar]
data$ColorProbe[i]
data$ColorProbe
abs(exp2.data$ColorProbe[i] - exp2.data[i, nontargetvar]) < 30
exp2.data$ColorProbe[i] - exp2.data[i, nontargetvar]
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
abs(exp2.data$ColorProbe[i] - exp2.data[i, nontargetvar]) < 30
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
debugSource('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
data[i, nontargetvar]
data$ColorProbe[i]
data$Setsize[i]
debugSource('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
data$Setsize[i]
data[i, nontargetvar]
data[i, nontargetvar]
1:(data$Setsize[i]-1)
1:-1
seq(1, 0)
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
View(data)
summary(exp2.data$ID)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
plot(data$PC ~ data$Setsize)
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT')
plot(data$PC ~ data$Setsize)
plot(data$PC ~ data$Setsize + data$ProbeType)
library(ggplot2)
ggplot(data=data) + aes(x=Setsize, y = PC, linetype = ProbeType)
ggplot(data=data) + aes(x=Setsize, y = PC,fill = type, linetype = ProbeType)
ggplot(data=data) + aes(x=Setsize, y = PC,fill = ProbeType, linetype = ProbeType)
ggplot(data=data) + aes(x=Setsize, y = PC,fill = ProbeType, linetype = ProbeType) + geom_line()
ggplot(data=data) + aes(x=Setsize, y = PC,linetype = ProbeType) + geom_line()
summary(exp2.data$ProbeType)
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R')
summary(exp2.data$ProbeType)
tapply(exp2.data$ProbeType, exp2.data$Setsize, summary)
data <- data.frame(aggregate(list(data$PC, exp2.data$RT), list(exp2.data$ProbeType, exp2.data$Setsize), mean))
data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
ggplot(data=data) + aes(x=Setsize, y = PC,linetype = ProbeType) + geom_line()
names(data) <- c('ProbeType', 'Setsize', 'PC', 'RT')
ggplot(data=data) + aes(x=Setsize, y = PC,linetype = ProbeType) + geom_line()
ggplot(data=data) + aes(x=Setsize, y = PC,linetype = ProbeType) + geom_line() + geom_jitter()
ggplot(data=data) + aes(x=Setsize, y = PC,linetype = ProbeType) + geom_line()
