theme(legend.position="bottom")
View(mixture_model)
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), color = 'red', linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'In Memory'), color = 'black', linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), color = 'black', linetype = 'solid', size = 2) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa()+
theme(legend.position="bottom")
View(mixture_model)
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), color = 'red', linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'In Memory'), color = 'black', linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), color = 'black', linetype = 'solid', size = 2) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
theme_bw()+
theme(legend.position="bottom")
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), color = 'red', linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'In Memory'), color = 'black', linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), color = 'black', linetype = 'solid', size = 2) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
theme_bw()+
theme(legend.position="bottom")
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), color = 'red', linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'In Memory'), color = 'black', linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), color = 'black', linetype = 'solid', size = 2) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
theme_bw()+
theme(legend.position="bottom")
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'In Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa()+
theme(legend.position="bottom")
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), color = 'red', linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'In Memory'), color = 'black', linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), color = 'black', linetype = 'solid', size = 2) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa()+
theme(legend.position="bottom")
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa()+
theme(legend.position="bottom")
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa()+
aa
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa()
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
theme(legend.position=c(0.8, 0.8))
jtools::theme_apa()
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
theme(legend.position=c(0.8, 0.8))+
jtools::theme_apa()
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(name = 'Line type',
values = c(Guessing="dashed", Memory="dashed", Recall="solid"))
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(name = 'Line type',
values = c(Guessing="dashed", Memory="dashed", Recall="solid"))+
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(values = c(Guessing="dashed", Memory="dashed", Recall="solid"))+
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing', linetype = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory', linetype = 'Guessing'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall', linetype = 'Guessing'), size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(values = c(Guessing="dashed", Memory="dashed", Recall="solid"))+
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing', linetype = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory', linetype = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall', linetype = 'Recall'), size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(values = c(Guessing="dashed", Memory="dashed", Recall="solid"))+
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing', linetype = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory', linetype = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall', linetype = 'Recall'), size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(name = 'Line type',
values = c(Guessing="dashed", Memory="dashed", Recall="solid")) +
labs(linetype = '')
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing', linetype = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory', linetype = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall', linetype = 'Recall'), size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(name = 'Line type',
values = c(Guessing="dashed", Memory="dashed", Recall="solid")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing', linetype = 'Guessing'), size = 1) +
geom_line(aes(y=memory, colour = 'Memory', linetype = 'Memory'), size = 1) +
geom_line(aes(y=recall, colour = 'Recall', linetype = 'Recall'), size = 2) +
scale_colour_manual(name="Line Color",
values=c(Guessing="red", Memory="black", Recall="black")) +
scale_linetype_manual(name = 'Line type',
values = c(Guessing="dashed", Memory="dashed", Recall="solid")) +
labs(linetype = '')
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi))
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c('-pi', '-pi/2', '0', 'pi/2', 'pi'))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
a = '1'
a + '2'
c(a, '2')
expression(-pi)
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), '-pi/2', '0', 'pi/2', 'pi'))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))\
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(circular)
library(jtools)
options(warn=-1)
x = seq(-pi, pi, 0.01)
change = rep(1/(2*pi), length(x))
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 15)
p_m = 0.7
same = memory*p_m + guessing*(1-p_m)
change = change / sum(change)
same = same / sum(same)
mixture_model <- data.frame(cbind(x, change, same))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=change, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=same, colour = 'Memory'), linetype = 'dashed', size = 1) +
scale_colour_manual(values=c(change="red", same="black")) +
xlab('recalled color x') +
ylab('Assumed probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
x = seq(-pi, pi, 0.01)
change = rep(1/(2*pi), length(x))
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 15)
p_m = 0.7
same = memory*p_m + guessing*(1-p_m)
change = change / sum(change)
same = same / sum(same)
mixture_model <- data.frame(cbind(x, change, same))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=change, colour = 'Change'), linetype = 'dashed', size = 1) +
geom_line(aes(y=same, colour = 'Same'), linetype = 'dashed', size = 1) +
scale_colour_manual(values=c(Change="red", Same="black")) +
xlab('recalled color x') +
ylab('Assumed probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
x = seq(-pi, pi, 0.01)
change = rep(1/(2*pi), length(x))
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 15)
p_m = 0.7
same = memory*p_m + guessing*(1-p_m)
change = change / sum(change)
same = same / sum(same)
mixture_model <- data.frame(cbind(x, change, same))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=change, colour = 'Change'), size = 1) +
geom_line(aes(y=same, colour = 'Same'), size = 1) +
scale_colour_manual(values=c(Change="red", Same="black")) +
xlab('recalled color x') +
ylab('Assumed probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
x = seq(-pi, pi, 0.01)
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 25)
p_m = 0.7
recall = memory*p_m + guessing*(1-p_m)
guessing = guessing / sum(guessing)
memory = memory / sum(memory)
recall = recall / sum(recall)
mixture_model <- data.frame(cbind(x, guessing, memory, recall))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
x = seq(-pi, pi, 0.01)
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 35)
p_m = 0.7
recall = memory*p_m + guessing*(1-p_m)
guessing = guessing / sum(guessing)
memory = memory / sum(memory)
recall = recall / sum(recall)
mixture_model <- data.frame(cbind(x, guessing, memory, recall))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
x = seq(-pi, pi, 0.01)
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 5)
p_m = 0.7
recall = memory*p_m + guessing*(1-p_m)
guessing = guessing / sum(guessing)
memory = memory / sum(memory)
recall = recall / sum(recall)
mixture_model <- data.frame(cbind(x, guessing, memory, recall))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=guessing, colour = 'Guessing'), linetype = 'dashed', size = 1) +
geom_line(aes(y=memory, colour = 'Memory'), linetype = 'dashed', size = 1) +
geom_line(aes(y=recall, colour = 'Recall'), linetype = 'solid', size = 2) +
scale_colour_manual(values=c(Guessing="red", Memory="black", Recall="black")) +
xlab('Deviant from target color') +
ylab('Probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
x = seq(-pi, pi, 0.01)
change = rep(1/(2*pi), length(x))
guessing = rep(1/(2*pi), length(x))
memory = dvonmises(x, mu = 0, kappa = 5)
p_m = 0.7
same = memory*p_m + guessing*(1-p_m)
change = change / sum(change)
same = same / sum(same)
mixture_model <- data.frame(cbind(x, change, same))
ggplot(data=mixture_model, aes(x=x)) +
geom_line(aes(y=change, colour = 'Change'), size = 1) +
geom_line(aes(y=same, colour = 'Same'), size = 1) +
scale_colour_manual(values=c(Change="red", Same="black")) +
xlab('recalled color x') +
ylab('Assumed probability of recall') +
scale_x_continuous(breaks = c(-pi, -pi/2, 0, pi/2, pi), labels = c(expression(-pi), expression(-pi/2), '0', expression(pi/2), expression(pi)))+
jtools::theme_apa() +
theme(legend.position=c(0.8, 0.8))
3^5
library(dfoptim)
install.packages("dfoptim")
library(dfoptim)
w <- 0.5
w
w[2] <- .2
w
dist <- list()
length(dist)
dist[[length(dist)+1]] <- c(2, 2, 2, 2, 2)
length(dist)
length(dist)+1
GCMutil <- function(theta, stim, exemplars, data, N, retpreds){
nDat <- length(data)
dev <- rep(NA, nDat)
preds <- dev
# unpack vector "theta", which includes all free parameters
c <- theta[1]
w <- theta[2]        # set w1 to 2nd parameter
w[2] <- (1-w[1])*theta[3]   # set w2 to third parameter, multiplied with what is left of sum(w)=1 after taking out w1
w[3] <- (1-sum(w[1:2]))*theta[4]  # set w3 to fourth parameter, multiply with what is still left of sum(w)
w[4] <- (1-sum(w[1:3]))  # set w4 to what is left of sum(w) after all other weights have been set
for (i in 1:nDat){     # loop over all observed frequencies for the individual stimuli
p <- GCMpred(stim[i,], exemplars, c, w)    # compute predicted probability of saying "category a" / of saying "b"
dev[i] <- -2*log(dbinom(data[i], size = N, prob = p[1]))
# compute deviance = -2log(Likelihod), using binomial data model
preds[i] <- p[1]   # write prediction for "category A" into vector of predictions
}
if (retpreds){   # depending on the "retpreds" flag, return predictions or deviance
return(preds)
} else {
return(sum(dev))
}
}
GCMutil()
GCMutil(data = 3)
help(nmkb)
library(dfoptim)
help(nmkb)
GCMutil <- function(theta, stim, exemplars, data, N, retpreds){
nDat <- length(data)
dev <- rep(NA, nDat)
preds <- dev
}
source('C:/Users/Hsuan-Yu Lin/Dropbox/workingDocuments/teaching/modeling2018/GCMpred.R')
exMatrix
exp(800*1)
0.35*16
sample
help(sample)
sample(14)
set.seed(0.001)
sample(14)
set.seed(3)
sample(14)
set.seed(3)
sample(14)
sample(14)
sample(14)
set.seed(3)
sample(14)
sample(14)
sample(14)
print(123)
print(123, 234)
print(c(123, 234))
dbinom(58, size = 64, prob = 0.5099)
log(dbinom(58, size = 64, prob = 0.5099))
library(circular) # for the von Mises
startparms <- list(A=.007,
B=0.01,
Cbase=0.12,
ws=0.5,
s1=3,
s2=3,
r=.77,
P=.26,
D=.64,
Kappa=10,
KappaF=50)
parms <- startparms
devtools::document()
install.packages("devtools")
devtools::document()
devtools::document()
?
.
?.
setwd("~/GitHub/IM_colorwheel_recognition/src/Analysis")
setwd("~/GitHub/IM_colorwheel_recognition/src")
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/PlotSimulationPredictions.r')
png("Analysis/Figs/VPBindingSASwapfitting.png", width = 800, height = 800)
plot_grid(plot_simgradient1, plot_probetype1, plot_simgradient2, plot_probetype2, nrow=2, ncol = 2)
dev.off()
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/PlotSimulationPredictions.r')
png("Analysis/Figs/SAfitting.png", width = 800, height = 800)
plot_grid(plot_simgradient1, plot_probetype1, plot_simgradient2, plot_probetype2, nrow=2, ncol = 2)
dev.off()
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/PlotSimulationPredictions.r')
png("Analysis/Figs/VPfitting.png", width = 800, height = 800)
plot_grid(plot_simgradient1, plot_probetype1, plot_simgradient2, plot_probetype2, nrow=2, ncol = 2)
dev.off()
