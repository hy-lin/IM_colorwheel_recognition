# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
a <- as.factor([1, 5])
a <- as.factor(c(1, 5)
)
a
setwd("C:/Users/Hsuan-Yu Lin/Dropbox/Programs/Python/PsychoPy/RepresentationInterference/COWheel3/Data")
setwd("~/GitHub/IM_colorwheel_recognition/src/Analysis")
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R', echo=TRUE)
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R', echo=TRUE)
setwd("~/GitHub/IM_colorwheel_recognition/src")
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/AccuracyAnalysis.R', echo=TRUE)
View(exp2.data)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$SimPC), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
exp2.data$Correctness
len(exp2.data$Correctness)
length(exp2.data$Correctness)
length(exp2.data$RT)
length(exp2.data$ProbeType)
length(exp2.data$Setsize)
length(exp2.data$SimPC)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$SimPC), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
exp2.data <- classifyProbeType(exp2.data, 2)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 5] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 6] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
# geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1) +
xlab('Set Size') +
ylab('Propotion of Correct') +
theme(text = element_text(size=14)) +
theme(legend.text = element_text(size=14))
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
xlab('Set Size') +
ylab('Propotion of Correct') +
theme(legend.text = element_text(size = 20))
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
xlab('Set Size') +
ylab('Reaction Time (s)')
bins <- seq(0, 180, 20)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
IM_dist <- rep(0, 9)
for (i in 1:9){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts))
names(tmp_data) <- c('breaks', 'frequency')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
#geom_line(aes(breaks, IM), color = 'red', size = 2) +
theme(text = element_text(size=14))
source('~/GitHub/IM_colorwheel_recognition/src/Analysis/PlotSimulationPredictions.r', echo=TRUE)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize, exp2.data$SimPC), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize, exp2.data$SimPC), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize, data$IM), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 7] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 8] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize, data$IM), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 7] <- tmp_data_sd[, 3] / sqrt(20)
View(tmp_data)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize, exp2.data$SimPC), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 6] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1) +
xlab('Set Size') +
ylab('Propotion of Correct') +
theme(text = element_text(size=14)) +
theme(legend.text = element_text(size=14))
View(data)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$SimPC), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 6] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1) +
xlab('Set Size') +
ylab('Propotion of Correct') +
theme(text = element_text(size=14)) +
theme(legend.text = element_text(size=14))
bins <- seq(0, 180, 20)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
IM_dist <- rep(0, 9)
for (i in 1:9){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts))
names(tmp_data) <- c('breaks', 'frequency')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
#geom_line(aes(breaks, IM), color = 'red', size = 2) +
theme(text = element_text(size=14))
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
geom_line(aes(breaks, IM), color = 'red', size = 2) +
theme(text = element_text(size=14))
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
names(tmp_data) <- c('breaks', 'frequency', 'IM')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
geom_line(aes(breaks, IM), color = 'red', size = 2) +
theme(text = element_text(size=14))
exp2.data <- loadSimulationData(1)
exp2.data <- classifyProbeType(exp2.data, 1)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$SimPC), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 6] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1) +
xlab('Set Size') +
ylab('Propotion of Correct') +
theme(text = element_text(size=14)) +
theme(legend.text = element_text(size=14))
bins <- seq(0, 180, 20)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
IM_dist <- rep(0, 9)
for (i in 1:9){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
names(tmp_data) <- c('breaks', 'frequency', 'IM')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
geom_line(aes(breaks, IM), color = 'red', size = 2) +
theme(text = element_text(size=14))
