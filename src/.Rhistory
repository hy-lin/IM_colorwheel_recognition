nontargetvar <- sprintf('ColorNonTarget%d', l)
if (wrapDistance(data$ColorProbe[i], data[i, nontargetvar]) < 13){
intrusion = TRUE
}
}
}
if (intrusion == TRUE){
data$ProbeType[i] = 'Internal Change'
} else{
data$ProbeType[i] = 'External Change'
}
}
data$dissimilarity[i] <- warpDistance(data$ColorProbe[i], data$ColorTarget[i])
}
data$ProbeType <- factor(data$ProbeType)
return(data)
}
exp2.data <- classifyProbeType(exp2.data)
classifyProbeType <- function(data){
data$ProbeType <- 1
data$dissimilarity <- 1
for (i in 1:length(data$ProbeType)){
if (data$ColorProbe[i] == data$ColorTarget[i]){
data$ProbeType[i] = 'Same'
}
else {
intrusion = FALSE
if (data$Setsize[i] > 1){
for (l in 1:(data$Setsize[i]-1)){
nontargetvar <- sprintf('ColorNonTarget%d', l)
if (wrapDistance(data$ColorProbe[i], data[i, nontargetvar]) < 13){
intrusion = TRUE
}
}
}
if (intrusion == TRUE){
data$ProbeType[i] = 'Internal Change'
} else{
data$ProbeType[i] = 'External Change'
}
}
data$dissimilarity[i] <- wrapDistance(data$ColorProbe[i], data$ColorTarget[i])
}
data$ProbeType <- factor(data$ProbeType)
return(data)
}
exp2.data <- classifyProbeType(exp2.data)
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity) +
geom_histogram()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity, y = Response) +
geom_histogram()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity, color = response) +
geom_histogram()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity, color = Response) +
geom_histogram()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity, fill = Response) +
geom_histogram()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity, fill = Response) +
geom_density()
stat_bin(data = exp2.data[exp2.data$Setsize==6,], geom = 'bar')
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity, fill = Response) +
stat_bin(data = exp2.data[exp2.data$Setsize==6,], geom = 'bar')
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity) +
stat_bin(data = exp2.data[exp2.data$Setsize==6,], geom = 'bar')
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity) +
stat_bin()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity) +
stat_bin()
ggplot(data=exp2.data[exp2.data$Setsize==6,]) + aes(x = dissimilarity) +
stat_bin()
bins <- seq(0, 180, 20)
h1 <- hist(data=exp2.data[exp2.data$Setsize==6 & exp2.data$Response==1,]$Response, bins, plot = 0)
h2 <- hist(data=exp2.data[exp2.data$Setsize==6,]$Response, bins, plot = 0)
bins
h1
h2
data=exp2.data[exp2.data$Setsize==6,]$Response
exp2.data[exp2.data$Setsize==6,]$Response
h1 <- hist(data=exp2.data[exp2.data$Setsize==6 & exp2.data$Response==1,]$dissimilarity, bins, plot = 0)
h1
bins
help("hist")
h1 <- hist(data=exp2.data[exp2.data$Setsize==6 & exp2.data$Response==1,]$dissimilarity, breaks = bins, plot = 0)
h1 <- hist(x = data=exp2.data[exp2.data$Setsize==6 & exp2.data$Response==1,]$dissimilarity, breaks = bins, plot = 0)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==1,]$dissimilarity, breaks = bins, plot = 0)
h1
h2 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data,]$dissimilarity, breaks = bins, plot = 0)
h2
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
h2
h1$counts/h2$counts
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
h1$counts/h2$counts
ggplot(data=h1$counts/h2$counts)+
stat_bar()
bar(h1$counts/h2$counts)
cbind(bins, h1$counts/h2$counts)
cbind(bins[1:-1], h1$counts/h2$counts)
bins[-1]
bins <- seq(0, 180, 20)
bins <- seq(-20)
bins
bins <- seq(0, 180, 20)
bins[-20]
bins[-10]
cbind(bins[-10], h1$counts/h2$counts)
as.dataframe(cbind(bins[-10], h1$counts/h2$counts))
data.frame(cbind(bins[-10], h1$counts/h2$counts))
names(tmp_data) <- c(breaks, frequency)
names(tmp_data) <- c('breaks', 'frequency')
ggplot(data=tmp_data)+aes(x = breaks)
tmp_data
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts))
names(tmp_data) <- c('breaks', 'frequency')
tmp_data
ggplot(data=tmp_data)+aes(x = breaks)
stat_bar()
ggplot(data=tmp_data)+aes(x = breaks)+
stat_bar()
ggplot(data=tmp_data)+aes(x = breaks)+
geom_bar()
ggplot(data=tmp_data)+aes(x = breaks, y = frequency)+
geom_bar()
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_bar()
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col()
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1)
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "Same" response')
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd) +
geom_point(position = pd)
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 5] <- tmp_data_sd[, 3] / sqrt(10)
tmp_data[, 6] <- tmp_data_sd[, 4] / sqrt(10)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd)
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd) +
geom_point(position = pd)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 5] <- tmp_data_sd[, 3] / sqrt(10)
tmp_data[, 6] <- tmp_data_sd[, 4] / sqrt(10)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd)
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd) +
geom_point(position = pd)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 5] <- tmp_data_sd[, 3] / sqrt(10)
tmp_data[, 6] <- tmp_data_sd[, 4] / sqrt(10)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd)
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd) +
geom_point(position = pd)
bins <- seq(0, 180, 20)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts))
names(tmp_data) <- c('breaks', 'frequency')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "Same" response')
exp2.data <- loadSimulationData(2)
loadSimulationData <- function(exp){
data <- read.table(sprintf('Data/fitting result/exp%d.dat', exp, exp), header = FALSE, fill = FALSE)
names(data) <- c('ID', 'TrialIndex', 'Setsize', 'TrialCondition',
'ColorTarget', 'LocationTarget',
'ColorNonTarget1', 'LocationNonTarget1',
'ColorNonTarget2', 'LocationNonTarget2',
'ColorNonTarget3', 'LocationNonTarget3',
'ColorNonTarget4', 'LocationNonTarget4',
'ColorNonTarget5', 'LocationNonTarget5',
'ColorProbe', 'LocationProbe',
'Response', 'Correctness', 'RT',
'IM', 'SA', 'SB-Binding', 'VP', 'VP-Binding')
data$ID <- factor(data$ID)
data$TrialIndex <- factor(data$TrialIndex)
data$TrialCondition <- factor(data$TrialCondition)
data$Response <- factor(data$Response)
return(data)
}
exp2.data <- loadSimulationData(2)
exp2.data <- classifyProbeType(exp2.data)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 5] <- tmp_data_sd[, 3] / sqrt(10)
tmp_data[, 6] <- tmp_data_sd[, 4] / sqrt(10)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd)
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd) +
geom_point(position = pd)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType)))
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType))
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 6] <- tmp_data_sd[, 4] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 5] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$IM), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
View(data)
View(data)
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
View(tmp_data)
View(tmp_data)
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 3] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data[, 6] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType))
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red')
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red')
classifyProbeType <- function(data){
data$ProbeType <- 1
data$dissimilarity <- 1
for (i in 1:length(data$ProbeType)){
if (data$ColorProbe[i] == data$ColorTarget[i]){
data$ProbeType[i] = 'Same'
data$IM[i] = 1-data$IM[i]
}
else {
intrusion = FALSE
if (data$Setsize[i] > 1){
for (l in 1:(data$Setsize[i]-1)){
nontargetvar <- sprintf('ColorNonTarget%d', l)
if (wrapDistance(data$ColorProbe[i], data[i, nontargetvar]) < 13){
intrusion = TRUE
}
}
}
if (intrusion == TRUE){
data$ProbeType[i] = 'Internal Change'
} else{
data$ProbeType[i] = 'External Change'
}
}
data$dissimilarity[i] <- wrapDistance(data$ColorProbe[i], data$ColorTarget[i])
}
data$ProbeType <- factor(data$ProbeType)
return(data)
}
exp2.data <- loadSimulationData(2)
exp2.data <- classifyProbeType(exp2.data)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$IM), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 6] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red')
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1)
ggplot(data=tmp_data, size = 1) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1)
ggplot(data=tmp_data, size = 1) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd) +
geom_point(position = pd) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red')
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType, size = 1) +
geom_line(position = pd) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd) +
geom_point(position = pd)
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$SimPC), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
classifyProbeType <- function(data){
data$ProbeType <- 1
data$dissimilarity <- 1
for (i in 1:length(data$ProbeType)){
if (data$ColorProbe[i] == data$ColorTarget[i]){
data$ProbeType[i] = 'Same'
data$SimPC[i] = 1-data$IM[i]
}
else {
intrusion = FALSE
if (data$Setsize[i] > 1){
for (l in 1:(data$Setsize[i]-1)){
nontargetvar <- sprintf('ColorNonTarget%d', l)
if (wrapDistance(data$ColorProbe[i], data[i, nontargetvar]) < 13){
intrusion = TRUE
}
}
}
if (intrusion == TRUE){
data$ProbeType[i] = 'Internal Change'
} else{
data$ProbeType[i] = 'External Change'
}
data$SimPC[i] = data$IM[i]
}
data$dissimilarity[i] <- wrapDistance(data$ColorProbe[i], data$ColorTarget[i])
}
data$ProbeType <- factor(data$ProbeType)
return(data)
}
exp2.data <- loadSimulationData(2)
exp2.data <- classifyProbeType(exp2.data)
data <- data.frame(aggregate(list(exp2.data$Correctness, exp2.data$RT, exp2.data$SimPC), list(exp2.data$ID, exp2.data$ProbeType, exp2.data$Setsize), mean))
names(data) <- c('ID', 'ProbeType', 'Setsize', 'PC', 'RT', 'IM')
tmp_data <- data.frame(aggregate(list(data$PC, data$RT, data$IM), list(data$ProbeType, data$Setsize), mean))
tmp_data_sd <- data.frame(aggregate(list(data$PC, data$RT), list(data$ProbeType, data$Setsize), sd))
tmp_data[, 6] <- tmp_data_sd[, 3] / sqrt(20)
tmp_data[, 7] <- tmp_data_sd[, 4] / sqrt(20)
names(tmp_data) <- c('ProbeType', 'Setsize', 'PC', 'RT', 'IM', 'PC_SE', 'RT_SE')
pd <- position_dodge(.1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1)
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
geom_line(position = pd, aes(x=Setsize, y = IM, linetype = ProbeType, group = ProbeType), color = 'red', size = 1) +
xlab('Set size') +
ylab('Propotion of Correct')
ggplot(data=tmp_data) + aes(x=Setsize, y = PC, linetype = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=PC-PC_SE, ymax=PC+PC_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
xlab('Set size') +
ylab('Reaction time')
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
xlab('Set size') +
ylab('Propotion of Correct')
ggplot(data=tmp_data) + aes(x=Setsize, y = RT, linetype = ProbeType, group = ProbeType) +
geom_line(position = pd, size = 1) +
geom_errorbar(aes(ymin=RT-RT_SE, ymax=RT+RT_SE), width=.1, position = pd, size = 1) +
geom_point(position = pd, size = 1) +
xlab('Set Size') +
ylab('Reaction Time (s)')
IM_dist <- rep(0, 10)
bins
IM_dist <- rep(0, 9)
for (i in 1:9){
IM_dist[i] <- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
IM_dist
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
IM_dist <- rep(0, 9)
for (i in 1:9){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
names(tmp_data) <- c('breaks', 'frequency', 'IM')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "Same" response')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "Same" response') +
geom_line(aes(breaks, IM))
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "Same" response') +
geom_line(aes(breaks, IM), color = red, size = 1)
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "Same" response') +
geom_line(aes(breaks, IM), color = 'red', size = 1)
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
geom_line(aes(breaks, IM), color = 'red', size = 1)
bins <- seq(0, 180, 10)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
IM_dist <- rep(0, 17)
for (i in 1:17){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
names(tmp_data) <- c('breaks', 'frequency', 'IM')
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
h1
len(h1$counts)
length(h1$counts)
bins <- seq(0, 180, 10)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
IM_dist <- rep(0, 18)
for (i in 1:18){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
names(tmp_data) <- c('breaks', 'frequency', 'IM')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
geom_line(aes(breaks, IM), color = 'red', size = 1)
bins <- seq(0, 180, 20)
h1 <- hist(x = exp2.data[exp2.data$Setsize==6 & exp2.data$Response==0,]$dissimilarity, breaks = bins, plot = 0)
h2 <- hist(x = exp2.data[exp2.data$Setsize==6,]$dissimilarity, breaks = bins, plot = 0)
IM_dist <- rep(0, 9)
for (i in 1:9){
IM_dist[i] <- 1- mean(exp2.data[exp2.data$Setsize==6 & exp2.data$dissimilarity >= bins[i] & exp2.data$dissimilarity < bins[i+1],]$IM)
}
tmp_data <- data.frame(cbind(bins[-10], h1$counts/h2$counts, IM_dist))
names(tmp_data) <- c('breaks', 'frequency', 'IM')
ggplot(data=tmp_data)+aes(breaks, frequency)+
geom_col() +
ylim(0, 1) +
xlab('Similarity between target and probe') +
ylab('Proportion of "no change" response') +
geom_line(aes(breaks, IM), color = 'red', size = 2)
